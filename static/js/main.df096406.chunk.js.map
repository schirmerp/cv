{"version":3,"sources":["info.js","skills.js","aside.js","intro.js","education.js","experience.js","resume.js","App.js","reportWebVitals.js","index.js"],"names":["Info","handlePhotoChange","e","setState","photo","target","value","handleAddress1Change","address1","handleAddress2Change","address2","handlePhoneChange","phone","handleEmailChange","email","handlePageChange","page","toggleEdit","prevState","edit","toggleEditPhoto","editPhoto","state","this","profilePhoto","backgroundImage","id","className","style","onClick","type","htmlFor","placeholder","onChange","Component","Skills","handleSkillChange","skill","onSubmitSkill","preventDefault","skills","concat","uniqid","handleRemove","key","newSKills","filter","map","Aside","Intro","handleNameChange","name","handleTitleChange","title","handleProfileChange","profile","Education","props","handleSchoolEdit","school","handleDegreeEdit","degree","handleStartDateEdit","startDate","handleEndDateEdit","endDate","handleGpaEdit","gpa","onSubmitEducation","education","date","newEducation","edu","text","Experience","handleCompanyChange","company","handleStartDateChange","handleEndDateChange","handleDescChange","desc","onSubmitExperience","experience","newExp","exp","Resume","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df096406.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n//import self from './src/self.jpg'\n//const self = require('./self.jpg')\n\nclass Info extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            photo: 'https://drive.google.com/uc?id=1f3sv_fpQW5TM3kwKnNIO0UzCAteCLfsh',\n            address1: '',\n            address2: '',\n            phone: '',\n            email: '',\n            page: '',\n            edit: false,\n            editPhoto: false\n        }\n    }\n\n    handlePhotoChange = e =>{\n        this.setState({\n            photo: e.target.value\n        })\n    }\n    handleAddress1Change = e =>{\n        this.setState({\n            address1: e.target.value\n        })\n    }\n    handleAddress2Change = e =>{\n        this.setState({\n            address2: e.target.value\n        })\n    }\n    handlePhoneChange = e =>{\n        this.setState({\n            phone: e.target.value\n        })\n    }\n    handleEmailChange = e =>{\n        this.setState({\n            email: e.target.value\n        })\n    }\n    handlePageChange = e =>{\n        this.setState({\n            page: e.target.value\n        })\n    }\n    toggleEdit = () => {\n        this.setState(prevState => ({\n            edit: !prevState.edit\n        }))\n    }\n    toggleEditPhoto = () => {\n        this.setState(prevState => ({\n            editPhoto: !prevState.editPhoto\n        }))\n    }\n\n    render(){\n        const {\n            photo,\n            address1,\n            address2,\n            phone,\n            email,\n            page,\n            edit,\n            editPhoto\n        } = this.state\n    \n\n        var profilePhoto = {\n            backgroundImage: 'url('+ photo +')'\n        }\n\n        return (\n            <div id=\"info\">\n                <div className=\"header\">Resume</div>\n                <img\n                    id=\"profile-photo\"\n                    style={profilePhoto}\n                    onClick={this.toggleEditPhoto}\n                    \n                />\n                 <div className=\"address\">\n                    <h2>Address</h2>\n                    <p>{address1 ? address1 : '822 Anderson Twp'}</p>\n                    <p>{address2 ? address2 : 'Cincinnati, OH. 45230'}</p>\n                </div>\n                <div className=\"phone\">\n                    <h2>Phone</h2>\n                    <p>{phone ? phone : '513-555-1234'}</p>\n                </div>\n                <div className=\"email\">\n                    <h2>Email</h2>\n                    <p>{email ? email : 'joey.newcode@gmail.com'}</p>\n                </div>\n                <div className=\"page\">\n                    <h2>Page</h2>\n                    <p>{page ? page : 'joescode.com'}</p>\n                </div>\n                <button\n                className=\"edit-toggle\"\n                type=\"button\"\n                onClick={this.toggleEdit}\n                >\n                    Edit\n                </button>\n\n                {edit &&\n                    <form id=\"intro-edit\" className=\"edit-form\">\n                        <label htmlFor=\"address1\">Address</label>\n                        <input\n                            id=\"address1\"\n                            type=\"text\"\n                            placeholder=\"822 Anderson Twp\"\n                            onChange={this.handleAddress1Change}\n                        />\n                        <label htmlFor=\"address2\">City, State. Zipcode</label>\n                        <input\n                            id=\"address2\"\n                            type=\"text\"\n                            placeholder=\"Cincinnati, OH 45230\"\n                            onChange={this.handleAddress2Change}\n                        />\n                        <label htmlFor=\"phone\">Phone</label>\n                        <input\n                            id=\"phone\"\n                            type=\"text\"\n                            onChange={this.handlePhoneChange}\n                        />\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            id=\"email\"\n                            type=\"text\"\n                            onChange={this.handleEmailChange}\n                        />\n                        <label htmlFor=\"page\">Page</label>\n                        <input\n                            id=\"page\"\n                            type=\"text\"\n                            onChange={this.handlePageChange}\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={this.toggleEdit}\n                        >\n                            Close Edit\n                        </button>\n                    </form>\n                }\n\n                {editPhoto &&\n                    <form id=\"photo-edit\" className=\"edit-form\">\n                        <label htmlFor=\"photo\">Photo URL</label>\n                        <input\n                            id=\"photo\"\n                            type=\"text\"\n                            onChange={this.handlePhotoChange}\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={this.toggleEditPhoto}\n                        >\n                            Close Edit\n                        </button>\n                    </form>\n\n                }\n            </div>\n        )\n    }\n\n\n}\n\nexport default Info","import React, {Component} from \"react\";\nimport uniqid from 'uniqid';\n\nclass Skills extends Component {\n    constructor(){\n        super();\n\n        this.state = {\n            skill: '',\n            skills: [\n                {\n                    id: uniqid(),\n                    skill: 'Typing'\n                },\n                {\n                    id: uniqid(),\n                    skill: 'Developing'\n                },\n                {\n                    id: uniqid(),\n                    skill: 'Unit-testing'\n                },\n                {\n                    id: uniqid(),\n                    skill: 'React.js'\n                },\n                {\n                    id: uniqid(),\n                    skill: 'Vanilla.js'\n                },\n                {\n                    id: uniqid(),\n                    skill: 'CSS'\n                },\n                {\n                    id: uniqid(),\n                    skill: 'HTML'\n                },\n                {\n                    id: uniqid(),\n                    skill: 'JavaScript'\n                }\n            ],\n            edit: false\n\n        }\n    }\n\n    handleSkillChange = e => {\n        this.setState({\n            skill: e.target.value\n        })\n    }\n\n    onSubmitSkill = e =>{\n        e.preventDefault();\n        this.setState({\n            skills: this.state.skills.concat({\n                id: uniqid(),\n                skill: this.state.skill\n            }),\n            skill: ''\n        })\n        this.toggleEdit()\n    }\n\n    toggleEdit = () =>{\n        this.setState(prevState => ({\n            edit: !prevState.edit\n        }))\n    }\n\n    handleRemove = key => {\n        const newSKills = this.state.skills.filter(skill => skill.id !== key)\n\n        this.setState({\n            skills: newSKills\n        })\n    }\n\n    render(){\n        const {\n            skill,\n            skills,\n            edit\n\n        } = this.state;\n\n        return (\n            <div id=\"skills\">\n                <h2>Skills</h2>\n                <ul>\n                    {skills.map(skill => {\n                        return(\n                            <li key={skill.id} onClick={() => this.handleRemove(skill.id)}>{skill.skill}</li>\n                        )\n                    })}\n                </ul>\n\n                <button\n                    className=\"edit-toggle\"\n                    type=\"button\"\n                    onClick={this.toggleEdit}\n                >\n                    Add\n                </button>\n\n                {edit &&\n                <form id=\"skill-add\" className=\"edit-form\">\n                    <label htmlFor=\"skill\">Skill</label>\n                    <input\n                        id=\"skill\"\n                        type=\"text\"\n                        value={skill}\n                        onChange={this.handleSkillChange}\n                    />\n                    <button\n                        type=\"button\"\n                        onClick={this.toggleEdit}\n                    >\n                        Close\n                    </button>\n                </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Skills;","import React, {Component} from \"react\";\nimport Info from './info'\nimport Skills from './skills';\n\nclass Aside extends Component {\n    render(){\n        return(\n            <div id=\"aside\">\n                <Info/>\n                <Skills/>\n            </div>\n        )\n    }\n}\n\nexport default Aside;","import React, {Component} from \"react\";\n\nclass Intro extends Component{\n    constructor(){\n        super();\n\n        this.state ={\n            name: '',\n            title: '',\n            profile: '',\n            edit: false,\n\n        }\n    }\n\n    handleNameChange = e => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n    handleTitleChange = e => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n    handleProfileChange = e => {\n        this.setState({\n            profile: e.target.value\n        })\n    }\n\n    toggleEdit = () =>{\n        this.setState(prevState => ({\n            edit: !prevState.edit\n        }))\n    }\n\n    render(){\n        const {\n            name,\n            title,\n            profile,\n            edit\n        } = this.state\n\n        return(\n            <div id=\"intro\">\n                <h1>{name ? name: 'Your Name'}</h1>\n                <p className=\"title\">{title ? title : 'Your Title'}</p>\n                <h2>Profile</h2>\n                <p className=\"profile\">{profile ? profile : 'Profile Information goes here .....'}</p>\n                <button\n                    className=\"edit-toggle\"\n                    type=\"button\"\n                    onClick={this.toggleEdit}\n                >\n                    Edit\n                </button>\n\n                {edit&&\n                    <form id=\"intro-edit\" className=\"eidt-form\">\n                        <label htmlFor=\"name\">Your name</label>\n                        <input\n                            id=\"name\"\n                            type=\"text\"\n                            onChange={this.handleNameChange}\n                        />\n                        <label htmlFor=\"title\">Your title</label>\n                        <input\n                            id=\"title\"\n                            type=\"text\"\n                            onChange={this.handleTitleChange}\n                        /><label htmlFor=\"profile\">Profile</label>\n                        <textarea\n                            id=\"profile\"\n                            onChange={this.handleProfileChange}\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={this.toggleEdit}\n                        >\n                            Close edit\n                        </button>\n                    </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Intro;","\nimport React, { Component} from \"react\";\nimport uniqid from 'uniqid';\n\nclass Education extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            school: '',\n            degree: '',\n            startDate: '',\n            endDate: '',\n            gpa: '',\n            education: [\n                {\n                    id: uniqid(),\n                    school: 'Odin University',\n                    degree: 'Web Development',\n                    date: 'Jan 2019 - October 2021',\n                    gpa: '4.0',\n                }\n            ],\n            edit: false\n        }\n        \n    }\n\n    handleSchoolEdit = e =>{\n        this.setState({\n            school: e.target.value\n        })\n    }\n    handleDegreeEdit = e =>{\n        this.setState({\n            degree: e.target.value\n        })\n    }\n    handleStartDateEdit = e =>{\n        this.setState({\n            startDate: e.target.value\n        })\n    }\n    handleEndDateEdit = e => {\n        this.setState({\n            endDate: e.target.value\n        })\n    }\n    handleGpaEdit = e => {\n        this.setState({\n            gpa: e.target.value\n        })\n    }\n\n    onSubmitEducation = e => {\n        e.preventDefault();\n        this.setState({\n            education: this.state.education.concat({\n                id: uniqid(),\n                school: this.state.school,\n                degree: this.state.degree,\n                date: this.startDate + ' - ' + this.endDate,\n                gpa: this.state.gpa\n            }),\n            school: '',\n            degree: '',\n            startDate: '',\n            endDate: '',\n            gpa: '',\n        })\n\n        this.toggleEdit()\n    }\n    toggleEdit = () =>{\n        this.setState( prevState => ({\n            edit: !prevState.edit\n        }))\n    }\n\n    handleRemove = key =>{\n        const newEducation = this.state.education.filter(education => education.id !== key)\n\n        this.setState({\n            education: newEducation\n        })\n    }\n\n\n\n    render(){\n        const {\n            school,\n            degree,\n            startDate,\n            endDate,\n            gpa,\n            education,\n            edit\n        } = this.state;\n\n        return(\n            <div id=\"education\">\n                <h2>Education</h2>\n                {education.map(edu =>{\n                    return(\n                        <div key={edu.id} onClick={() => this.handleRemove(edu.id)}>\n                            <div>\n                                <p className=\"education-date\">{edu.date}</p>\n                                <p className=\"education-degree\">{edu.degree}</p>\n                            </div>\n                            <div>\n                                <p className=\"education-school\">{edu.school}</p>\n                                <p className=\"education-gpa\">{edu.gpa}</p>\n                            </div>\n                        </div>\n                    )\n                })}\n                <button\n                    className=\"edit-toggle\"\n                    type=\"button\"\n                    onClick={this.toggleEdit}\n                >\n                    Add\n                </button>\n\n                {edit &&\n                    <form id=\"education-add\" className=\"edit-form\">\n                        <label htmlFor=\"school\">School</label>\n                        <input\n                            id=\"school\"\n                            text=\"text\"\n                            value={school}\n                            onChange={this.handleSchoolEdit}\n                        />\n                        <label htmlFor=\"degree\">Degree</label>\n                        <input\n                            id=\"degree\"\n                            text=\"text\"\n                            value={degree}\n                            onChange={this.handleDegreeEdit}\n                        />\n                        <label htmlFor=\"start-date\">Start Date</label>\n                        <input\n                            id=\"start-date\"\n                            text=\"text\"\n                            value={startDate}\n                            placeholder=\"Month &amp; Year \"\n                            onChange={this.handleStartDateEdit}\n                        />\n                        <label htmlFor=\"end-date\">End Date</label>\n                        <input\n                            id=\"end-date\"\n                            text=\"text\"\n                            value={endDate}\n                            placeholder=\"Month &amp; Year \"\n                            onChange={this.handleEndDateEdit}\n                        />\n                        <label htmlFor=\"gpa\">GPA</label>\n                        <input\n                            id=\"gpa\"\n                            text=\"text\"\n                            value={gpa}\n                            onChange={this.handleGpaEdit}\n                        />\n                        <button \n                        type=\"button\"\n                        onClick={this.onSubmitEducation}\n                        >\n                            Add Education\n                        </button>\n                        <button \n                        type=\"button\"\n                        onClick={this.toggleEdit}\n                        >\n                            Close\n                        </button>\n                    </form>\n                }\n            </div>\n        )\n    }\n}\nexport default Education;","import { Component } from \"react\";\nimport uniqid from 'uniqid'\n\nclass Experience extends Component {\n    constructor(){\n        super();\n\n\n        this.state ={\n            company: '',\n            title: '',\n            startDate: '',\n            endDate: '',\n            desc: '',\n            experience: [\n                {\n                    id: uniqid(),\n                    company: '4WeHelp',\n                    title: 'Manager',\n                    date: 'Jan 2011 - Aug 2020',\n                    desc: 'Responsible for all aspects of the business. Handled Payroll, Schedule and Employees. Also responsible for Job leads, supervised job completion and satisfaction. Other responseabilties included: Website(Content and Function), Office(Calls and Walk-ins), as well as warehouse(Inventory and Logistics)',\n\n                },\n                {\n                    id: uniqid(),\n                    company: 'Procter and Gamble',\n                    title: 'CLFC and Scripting Team',\n                    date: 'Jan 2008 - Dec 2010',\n                    desc: 'Handeled inventory levels in 5 warehouses, and over 3,000 products for P&Gs top client(Kroger). I also was a memeber of the Scripting Team. Where I wrote code to simplify and improve processes. Had several programs implemented across the Site.',\n\n                \n                }\n            ],\n            edit: false\n        };\n\n    }\n\n    handleCompanyChange = e => {\n        this.setState({\n            company: e.target.value\n        })\n    }\n    handleTitleChange = e => {\n        this.setState({\n            title: e.target.value\n        })\n    }\n    handleStartDateChange = e => {\n        this.setState({\n            startDate: e.target.value\n        })\n    }\n    handleEndDateChange = e => {\n        this.setState({\n            endDate: e.target.value\n        })\n    }\n    handleDescChange = e => {\n        this.setState({\n            desc: e.target.value\n        })\n    }\n    onSubmitExperience = e =>{\n        e.preventDefault();\n        this.setState({\n            experience: this.state.experience.concat({\n                id: uniqid(),\n                company: this.state.company,\n                title: this.state.title,\n                date: this.state.startDate + ' - ' + this.state.endDate,\n                desc: this.state.desc\n            }),\n            company: '',\n            title: '',\n            startDate: '',\n            endDate: '',\n            desc: '',\n\n        })\n        this.toggleEdit()\n    }\n\n    toggleEdit = e =>{\n        this.setState(prevState => ({\n            edit: !prevState.edit\n        }))\n    }\n\n    handleRemove = key =>{\n        const newExp = this.state.experience.filter(exp => exp.id !== key)\n\n        this.setState({\n            experience: newExp\n        })\n    }\n\n    render(){\n        const {\n            company,\n            title,\n            startDate,\n            endDate,\n            desc,\n            experience,\n            edit\n        }= this.state;\n\n        return (\n            <div id=\"experience\">\n                <h2>Experience</h2>\n                {experience.map(exp => {\n                    return(\n                        <div key={exp.id} onClick={() => this.handleRemove(exp.id)}>\n                            <div>\n                                <p className=\"experience-date\">{exp.date}</p>\n                                <p className=\"experience-title\">{exp.title}</p>\n                            </div>\n                            <div>\n                                <p className=\"experience-company\">{exp.company}</p>\n                                <p className=\"experience-desc\">{exp.desc}</p>\n                            </div>\n                        </div>\n                    )\n                        \n                })}\n                <button\n                    className=\"edit-toggle\"\n                    type=\"button\"\n                    onClick={this.toggleEdit}\n                >\n                    Add\n                </button>\n\n                {edit &&\n                    <form id=\"experience-add\" className=\"edit-form\">\n                        <label htmlFor=\"company\">Company</label>\n                        <input\n                            id=\"company\"\n                            type=\"text\"\n                            value={company}\n                            onChange={this.handleCompanyChange}\n                        />\n                        <label htmlFor=\"title\">Title</label>\n                        <input\n                            id=\"title\"\n                            type=\"text\"\n                            value={title}\n                            onChange={this.handleTitleChange}\n                        />\n                        <label htmlFor=\"start-date\">Start Date</label>\n                        <input\n                            id=\"start-date\"\n                            type=\"text\"\n                            value={startDate}\n                            onChange={this.handleStartDateChange}\n                        />\n                        <label htmlFor=\"end-date\">End Date</label>\n                        <input\n                            id=\"end-date\"\n                            type=\"text\"\n                            value={endDate}\n                            onChange={this.handleEndDateChange}\n                        />\n                        <label htmlFor=\"desc\">Description</label>\n                        <input\n                            id=\"desc\"\n                            type=\"text\"\n                            value={desc}\n                            onChange={this.handleDescChange}\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={this.onSubmitExperience}\n                        >\n                            Add Experience\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={this.toggleEdit}\n                        >\n                            Close\n                        </button>\n                    </form>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Experience;","import React, {Component} from 'react';\nimport Aside from './aside';\nimport Intro from './intro';\nimport Education from './education';\nimport Experience from './experience';\n\n\nclass Resume extends Component {\n    render(){\n        return(\n            <div id=\"resume\">\n                <Aside/>\n                <main>\n                    <Intro/>\n                    <Education/>\n                    <Experience/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Resume;","import './App1.css';\nimport Resume from './resume';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Resume/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}